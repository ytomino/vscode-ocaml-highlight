{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "OCaml",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#emptyComments"
		},
		{
			"include": "#docComments"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#characters"
		},
		{
			"include": "#strings"
		}
	],
	"repository": {
		"comments": {
			"name": "comment.block.ocaml",
			"begin": "\\(\\*([^*]|$|\\*\\*+[^*)])",
			"end": "\\*\\)",
			"patterns": []
		},
		"emptyComments": {
			"name": "comment.block.ocaml",
			"match": "\\(\\*\\*+\\)",
			"patterns": []
		},
		"docComments": {
			"name": "comment.block.documentation.ocaml",
			"begin": "\\(\\*\\*([^*)]|$)",
			"end": "\\*\\)",
			"patterns": []
		},
		"keywords": {
			"patterns": [{
				"name": "keyword.control.ocaml",
				"match": "\\b(and|as|assert|asr|begin|class|constraint|do|done|downto|else|end|exception|external|false|for|fun|function|functor|if|in|include|inherit|initializer|land|lazy|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|then|to|true|try|type|val|virtual|when|while|with)\\b"
			}]
		},
		"characters": {
			"patterns": [{
				"name": "string.quoted.single.ocaml",
				"match": "'([^\\\\]|(\\\\([\"'ntbr ]|\\d\\d\\d|x[[:xdigit:]][[:xdigit:]]|o[0-3][0-7][0-7])))'",
				"captures": {
					"2": {
						"name": "constant.character.escape.ocaml"
					}
				}
			}]
		},
		"strings": {
			"name": "string.quoted.double.ocaml",
			"begin": "\"",
			"end": "\"",
			"patterns": [{
				"name": "constant.character.escape.ocaml",
				"match": "\\\\([\"'ntbr ]|\\d\\d\\d|x[[:xdigit:]][[:xdigit:]]|o[0-3][0-7][0-7]|u[[:xdigit:]]+|$)"
			}]
		}
	},
	"scopeName": "source.ocaml"
}
