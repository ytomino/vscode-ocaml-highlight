{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "OCaml",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#emptyComments"
		},
		{
			"include": "#docComments"
		},
		{
			"include": "#attributes"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#keywordSymbols"
		},
		{
			"include": "#infixSymbols"
		},
		{
			"include": "#prefixSymbols"
		},
		{
			"include": "#extendedIndexingSymbols"
		},
		{
			"include": "#polymorphicVariants"
		},
		{
			"include": "#numerics"
		},
		{
			"include": "#characters"
		},
		{
			"include": "#strings"
		}
	],
	"repository": {
		"comments": {
			"name": "comment.block.ocaml",
			"begin": "(\\(\\*)([^*]|$|\\*\\*+[^*)])",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.comment.ocaml"
				}
			},
			"end": "\\*\\)",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.comment.ocaml"
				}
			},
			"patterns": []
		},
		"emptyComments": {
			"name": "comment.block.ocaml",
			"match": "(\\(\\*)\\**(\\*\\))",
			"captures": {
				"1": {
					"name": "punctuation.definition.comment.ocaml"
				},
				"2": {
					"name": "punctuation.definition.comment.ocaml"
				}
			},
			"patterns": []
		},
		"docComments": {
			"name": "comment.block.documentation.ocaml",
			"begin": "(\\(\\*\\*)([^*)]|$)",
			"beginCaptures": {
				"1": {
					"name": "punctuation.definition.comment.ocaml"
				}
			},
			"end": "\\*\\)",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.comment.ocaml"
				}
			},
			"patterns": []
		},
		"attributes": {
			"begin": "(\\[@+)([A-Za-z0-9_'.]+)",
			"beginCaptures": {
				"1": {
					"name": "keyword.other.ocaml"
				},
				"2": {
					"name": "entity.other.attribute-name.ocaml"
				}
			},
			"end": "\\]",
			"endCaptures": {
				"0": {
					"name": "keyword.other.ocaml"
				}
			},
			"patterns": [
				{
					"include": "#numerics"
				},
				{
					"include": "#characters"
				},
				{
					"include": "#strings"
				}
			]
		},
		"keywords": {
			"patterns": [{
				"name": "keyword.control.ocaml",
				"match": "\\b(and|as|assert|asr|begin|class|constraint|do|done|downto|else|end|exception|external|false|for|fun|function|functor|if|in|include|inherit|initializer|land|lazy|let|lor|lsl|lsr|lxor|match|method|mod|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|then|to|true|try|type|val|virtual|when|while|with)\\b"
			}]
		},
		"keywordSymbols": {
			"patterns": [{
				"name": "keyword.operator.ocaml",
				"match": "\\(|\\)|,|;;?|\\[[<>|]?|\\]|{<?|}|(#|&&?|->|\\.\\.?|:[:>]?|<-|>[\\]}]|\\?|\\|[\\]|]?|~)(?![!$%&*+\\-./:<=>?@^|~])|\\b_\\b"
			}]
		},
		"infixSymbols": {
			"patterns": [{
				"name": "entity.other.infix.ocaml",
				"match": "[=<>@^|&+\\-*/$%][!$%&*+\\-./:<=>?@^|~]*|#[!$%&*+\\-./:<=>?@^|~]+|:=(?![$%&*+\\-./:<=>@^|])"
				}]
		},
		"prefixSymbols": {
			"patterns": [{
				"name": "entity.other.prefix.ocaml",
				"match": "![!$%&*+\\-./:<=>?@^|~]*|[?~][!$%&*+\\-./:<=>?@^|~]+"
			}]
		},
		"extendedIndexingSymbols": {
			"patterns": [{
				"name": "entity.other.indexing.ocaml",
				"match": "\\.[!$%&*+\\-/:=>?@^|~][!$%&*+\\-./:<=>?@^|~]*"
			}]
		},
		"polymorphicVariants": {
			"patterns": [{
				"name": "entity.name.tag.ocaml",
				"match": "`[A-Za-z_][A-Za-z_0-9']*"
			}]
		},
		"numerics": {
			"patterns": [{
				"name": "constant.numeric.ocaml",
				"match": "\\b(0x[[:xdigit:]_]+(\\.[[:xdigit:]_]*([pP][+\\-]?[[:digit:]_]+)?)?|0o[0-7_]+|0b[0-1_]+|\\d[[:digit:]_]*(\\.[[:digit:]_]*([eE][+\\-]?[[:digit:]_]+)?)?)"
			}]
		},
		"characters": {
			"patterns": [{
				"name": "string.quoted.single.ocaml",
				"match": "'([^\\\\]|(\\\\([\"'ntbr ]|\\d\\d\\d|x[[:xdigit:]][[:xdigit:]]|o[0-3][0-7][0-7]|\\\\)))'",
				"captures": {
					"2": {
						"name": "constant.character.escape.ocaml"
					}
				}
			}]
		},
		"strings": {
			"name": "string.quoted.double.ocaml",
			"begin": "\"",
			"end": "\"",
			"patterns": [{
				"name": "constant.character.escape.ocaml",
				"match": "\\\\([\"'ntbr ]|\\d\\d\\d|x[[:xdigit:]][[:xdigit:]]|o[0-3][0-7][0-7]|u[[:xdigit:]]+|\\\\|$)"
			}]
		}
	},
	"scopeName": "source.ocaml"
}
